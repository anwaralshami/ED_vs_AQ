coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
p
oddsRatioPlot <- function(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList){
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange(disease)->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
#p
return(p)
}
oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
oddsRatioPlot <- function(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList){
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange(estimate)->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
#p
return(p)
}
oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
#print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
oddsRatioPlot <- function(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList){
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
#print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange(estimate)->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
#p
return(p)
}
oddsRatioPlot <- function(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList){
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
#print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange(estimate)->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
#p
return(p)
}
mindate09 <- ymd(20090630)
maxdate09 <- ymd(20100630)
mindate18 <- ymd(20181103)
maxdate18 <- ymd(20191104)
minage <-50
maxage <-60
addressList <- address
genderList <- c("M","F", "Other")
n <- 20
oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
mindate09 <- ymd(20090630)
maxdate09 <- ymd(20100630)
mindate18 <- ymd(20181103)
maxdate18 <- ymd(20191104)
minage <-50
maxage <-60
addressList <- address
genderList <- c("M","F", "Other")
n <- 20
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
#print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
p
oddsRatios2
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange(desc(estimate))->oddsRatios2
oddsRatios2
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
arrange((estimate))->oddsRatios2
oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
p
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
mutate(disease = fct_reorder(disease, desc(estimate)))
library(forcats)
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
mutate(disease = fct_reorder(disease, desc(estimate)))
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
mutate(disease = fct_reorder(disease, desc(estimate)))%>%
arrange((estimate))->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
#coord_trans(x = scales:::exp_trans(10)) +
#scale_x_continuous(breaks = log10(seq(0.1, 2.5, 0.1)), labels = seq(0.1, 2.5, 0.1),
# limits = log10(c(0.09,2.5))) +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
p
oddsRatioPlot <- function(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList){
df2009 %>%
filter(admissionDate>mindate09,
admissionDate<maxdate09,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count09 = n()) ->count09
df2018 %>%
filter(admissionDate>mindate18,
admissionDate<maxdate18,
age<maxage,
age>minage,
address %in% addressList,
sex %in% genderList)%>%
group_by(ccsCodeDesc)%>%
summarize(count18 = n()) ->count18
joinCounts <- inner_join(count09,count18)
odds <- as.data.frame(select(joinCounts,-ccsCodeDesc))
rownames(odds)<-joinCounts$ccsCodeDesc
colnames(odds)<-c("2009-10","2018-19")
totals <- data.frame(EDyear = c("2009-10","2018-19"),
EDcount = c(sum(odds$`2009-10`),sum(odds$`2018-19`))
)
oddsRatios <- generateOdds_5z(1,as.matrix(odds),totals,c("2009-10","2018-19"))
for (i in 2:nrow(odds)){
#print(i)
oddsRatios<-rbind(oddsRatios,generateOdds_5z(i,as.matrix(odds),totals,c("2009-10","2018-19")))
}
oddsRatios %>%
filter(exposure == "2018-19")%>%
select(disease,Case,Control,estimate,lower,upper,midp.exact)%>%
filter(midp.exact <= 0.05)%>%
mutate(disease = fct_reorder(disease, desc(estimate)))%>%
arrange((estimate))->oddsRatios2
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
scale_x_continuous(breaks = seq(0,10,1) ) +
coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(1.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
return(p)
}
setwd("~/genRepo/AUBMC_health_vs-AQ")
setwd("~/genRepo/AUBMC_health_vs-AQ/EDdata")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("funs.R")
source("funs.R")
oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)[[1]]
oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)[[2]]
x<-oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
x[[1]]
x[[2]]
plot(x[[2]]                 )
ggplot(x[[2]]                 )
x[2]
x
View(x)
source("funs.R")
x<-oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
x
x[[1]]
ncol(x[[1]])
nrow(x[[1]])
View(x)
runApp()
runApp()
runApp()
runApp()
x
x<-oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
load(file="processedData/admissions_2009_2010_clean")
load(file="processedData/admissions_2018_2019_clean")
load(file = "processedData/ordered_ccs_codes")
load(file = "processedData/address")
source("funs.R")
###### Merge years and align dates for plotting ######
mindate09 <- ymd(20090630)
maxdate09 <- ymd(20100630)
mindate18 <- ymd(20181103)
maxdate18 <- ymd(20191104)
minage <-50
maxage <-60
addressList <- address
genderList <- c("M","F", "Other")
n <- 20
x<-oddsRatioPlot(df2009,df2018, mindate09, maxdate09,
mindate18,maxdate18,minage,maxage,addressList,genderList)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/genRepo/AUBMC_health_vs-AQ/EDdata")
p <- ggplot(oddsRatios2, aes(x = estimate, y = disease)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
geom_errorbarh(aes(xmax = upper, xmin = lower), size = .5, height =
.2, color = "gray50") +
geom_point(size = 3.5, color = "orange") +
scale_x_continuous(trans="log",breaks = c(seq(0,1,0.2),seq(2,5,1) )) +
#coord_trans(x = 'log10') +
theme_bw()+
theme(panel.grid.minor = element_blank()) +
ylab("") +
xlab("Odds ratio (log scale)") +
annotate(geom = "text", y =1.1, x = log10(0.5),
label = "Model p < 0.05", size = 3.5, hjust = 0)
c(seq(1,10,1))
c(unlist(seq(1,10,1)))
seq(1,10,1)
c(seq(1,10,1),seq(10,1000,5))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(questionr)
